@*<li class="@Html.RouteIf("forms", "active")">
        <a href="#"><i class="fa fa-lg fa-fw fa-cube txt-color-blue"></i> <span class="menu-item-parent">Settings</span></a>
        <ul>
            <li class="@Html.RouteIf("privacypolicy", "active")">
                <a href="@Url.Action("privacypolicy", "misc")" title="Dashboard"><i class="fa fa-lg fa-fw fa-gear"></i> <span class="menu-item-parent">Security Policy</span></a>
            </li>
            <li class="@Html.RouteIf("roles", "active")">
                <a href="@Url.Action("roles", "misc")" title="Dashboard"><i class="fa fa-lg fa-fw fa-picture-o"></i> <span class="menu-item-parent">Roles</span></a>
            </li>
            <li class="@Html.RouteIf("preference", "active")">
                <a href="@Url.Action("preference", "misc")"><i class="fa fa-cube"></i> Preferences</a>
            </li>
        </ul>
    </li>*@

@model List<DynamicMenuViewModel>
       
@if (Model != null && Model.Any())
{
    var parentMenus = Model.Where(i => i.ParentMenucode == 0).ToList();
    foreach (var item in parentMenus)
    {
        var controller = !string.IsNullOrEmpty(item.MenuURL) ? item.MenuURL.Split(',')[0] : string.Empty;
        var action = !string.IsNullOrEmpty(item.MenuURL) ? item.MenuURL.Split(',')[1] : string.Empty;

        var childItems = Model.Any(i => i.ParentMenucode == item.Id) ? Model.Where(i => i.ParentMenucode == item.Id).ToList() : new List<DynamicMenuViewModel>();
        if (childItems != null && childItems.Any())
        {
        <li class="@Html.RouteIf(action, "active")">
            <a href="#"><i class="fa fa-lg fa-fw fa-cube txt-color-blue"></i> <span class="menu-item-parent">@item.MenuName</span></a>
            <ul>
                @foreach (var childItem in childItems)
                {
                    var childcontroller = !string.IsNullOrEmpty(childItem.MenuURL) ? childItem.MenuURL.Split(',')[0] : string.Empty;
                    var childaction = !string.IsNullOrEmpty(childItem.MenuURL) ? childItem.MenuURL.Split(',')[1] : string.Empty;
                    <li class="@Html.RouteIf(childaction, "active")">
                        <a href="@Url.Action(childaction,childcontroller)"><i class="fa fa-cube"></i> @childItem.MenuName</a>
                    </li>
                }
            </ul>
        </li>
        }
        else {
        <li>
            <a href="@Url.Action(action,controller)" title="Module"><i class="fa fa-lg fa-fw fa-cube txt-color-blue"></i> <span class="menu-item-parent">@item.MenuName</span></a>
        </li>
        }
    }
}
