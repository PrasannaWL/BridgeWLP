@using CaptchaMvc.HtmlHelpers
@using CaptchaMvc;
@model AccountLoginModel
@{
    ViewBag.PageId = "extr-page";
    ViewBag.PageClass = "animated fadeInDown";
}

<div id="content" class="container">
    <h1>The Bridge</h1>
    <div class="row landing-page">
        @{ Html.RenderPartial("_LoginText"); }
        <div class="col-xs-12 col-sm-12 col-md-5 col-lg-4">
            <div class="well no-padding">
                <form action="@Url.Action("login", "account")" method="POST" id="login-form" class="smart-form client-form">
                    <header>
                        @Resource.Submit
                    </header>
                    @Html.HiddenFor(m => m.ReturnUrl)
                    @Html.HiddenFor(m => m.IsCaptchaEnabled)
                    @Html.HiddenFor(m => m.ForgotPassword)
                    @Html.HiddenFor(m => m.LoginAttempt)
                    @Html.HiddenFor(m => m.RememberMe)
                    @Html.HiddenFor(m => m.VirtualKeyboard)
                    @Html.HiddenFor(m => m.IsFirstPasswordChangeRequired)
                    @Html.AntiForgeryToken()
                    @Html.ValidationBootstrap()
                    <fieldset>
                        <section>
                            @Html.LabelFor(model => model.Email, new { @class = "label" })
                            @*<label class="label">E-mail</label>*@
                            <label class="input">
                                <i class="icon-append fa fa-user"></i>
                                @Html.EditorFor(model => model.Email, new { @type = "email" })
                                @*<input type="email" name="email" value="demo@email.com">*@
                                <b class="tooltip tooltip-top-right"><i class="fa fa-user txt-color-teal"></i> @Resource.EmailValidationErrorMessage</b>
                            </label>
                        </section>

                        <section>
                            @Html.LabelFor(model => model.Password, new { @class = "label" })
                            @*<label class="label">Password</label>*@
                            <label class="input">
                                <i class="icon-append fa fa-lock"></i>
                                @Html.EditorFor(model => model.Password, new { @type = "password", @name = "password", @id = "password" })
                                @*<input type="password" name="password" value="demo">*@
                                <b class="tooltip tooltip-top-right"><i class="fa fa-lock txt-color-teal"></i> @Resource.PasswordValidationErrorMessage</b>
                            </label>
                            @if (Model.ForgotPassword)
                            {
                                <div class="note">
                                    <a href="@Url.Action("forgotpassword", "account")"><i class="fa fa-frown-o"></i> @Resource.ForgotPassword</a>
                                </div>
                            }
                        </section>
                        @if (Model.VirtualKeyboard)
                        {
                            <section>
                                <label class="checkbox">
                                    <input type="checkbox" name="rememberMe" value="true" id="virtualKeyboard">
                                    <i></i>@Resource.VirtualKeyboard
                                </label>
                            </section>
                        }
                        @if (Model.IsCaptchaEnabled)
                        {
                            @Html.Captcha(5)
                            @*@Html.MathCaptcha()*@
                        }
                    </fieldset>
                    <footer>
                        <button type="submit" class="btn btn-primary">
                            @Resource.Submit
                        </button>
                    </footer>
                </form>
            </div>
        </div>
    </div>
</div>
@section pagespecific {
    <script type="text/javascript">
        $(function () {

            $("#virtualKeyboard").on('change', function () {
                var keyboard = $('#Password').keyboard();
                var keyboardContext = keyboard.getkeyboard();

                if (!this.checked) {
                    keyboardContext.destroy();
                }
            });

            $("#login-form").validate({
                // Rules for form validation
                rules: {
                    email: {
                        required: true,
                        email: true
                    },
                    password: {
                        required: true,
                        minlength: 3,
                        maxlength: 20
                    }
                },

                // Messages for form validation
                messages: {
                    email: {
                        required: 'Please enter your email address',
                        email: 'Please enter a VALID email address'
                    },
                    password: {
                        required: 'Please enter your password'
                    }
                },

                // Do not change code below
                errorPlacement: function (error, element) {
                    error.insertAfter(element.parent());
                }
            });
        });
    </script>
}